# -*- coding: utf-8 -*-
"""tmwithbertopic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15HxTEpHZFB7z4zg-ZNBHKVCZfyPIEPlx
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

df=pd.read_csv("20200325_counsel_chat.csv")
df.head(3)


# In[2]:


#data.drop(columns=["Unnamed: 0","questionID","questionLink","topic","therapistInfo","therapistURL","upvotes","views","split"],inplace=True)


# In[3]:


df["qqatext"]=df["questionTitle"]+df["questionText"]+df["answerText"]


# In[4]:


df.qqatext


# In[5]:


df.qqatext[1]
classes=df.topic.unique()
classes=classes.tolist()
# In[6]:


df.drop(columns=["Unnamed: 0","questionID","questionLink","questionTitle","questionText","topic","answerText","therapistInfo","therapistURL","upvotes","views","split"],inplace=True)


# In[7]:


df


# In[8]:


df.qqatext[1]


# In[10]:


df

!pip install bertopic

from bertopic import BERTopic

topic_model = BERTopic(language="english", calculate_probabilities=True, verbose=True)
topics, probs = topic_model.fit_transform(df.qqatext)

# extracting topics
freq = topic_model.get_topic_info(); freq.head(5)

#-1 refers to all outliers and should typically be ignored. Next, let's take a look at a frequent topic that were generated:

topic_model.get_topic(1)  # Select the most frequent topic

topic_model.visualize_topics()

topic_model.visualize_distribution(probs[220], min_probability=.0002)

topic_model.visualize_hierarchy(top_n_topics=20)

topic_model.visualize_barchart(top_n_topics=5)

topic_model.visualize_heatmap(n_clusters=20, width=1000, height=1000)

topic_model.visualize_term_rank()

#Search Topics
similar_topics, similarity = topic_model.find_topics("family", top_n=5)
import pandas as pd
pd.DataFrame({'similar_topics':similar_topics,'similarity':similarity})

topic_model.get_topic(52)

topic_model.get_topic_freq().head(10)

t=[topic_model.topic_names]

t

topic_model.n_gram_range

"""## extra working for practice"""

topic_model.c_tf_idf

topic_model.visualize_topics_per_class

topic_model.top_n_words

topic_model.topics

topic_model.min_topic_size

classes

